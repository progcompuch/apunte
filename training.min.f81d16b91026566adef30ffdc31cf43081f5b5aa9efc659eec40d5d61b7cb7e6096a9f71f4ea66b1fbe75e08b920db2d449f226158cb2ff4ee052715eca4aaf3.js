const trainingNames=["Búsqueda Binaria / Dos Punteros","Grafos: BFS / DFS / Dijkstra / DSU","Programación Dinámica","Estructuras de Datos"],trainingProblems=[[{problemName:"Books",problemId:"A",problemLetter:"A",problemUrl:"https://codeforces.com/gym/567665/problem/A",categoryIndex:0,idx:0},{problemName:"Hamburgers",problemId:"B",problemLetter:"B",problemUrl:"https://codeforces.com/gym/567665/problem/B",categoryIndex:0,idx:1},{problemName:"Sagheer and Nubian Market",problemId:"C",problemLetter:"C",problemUrl:"https://codeforces.com/gym/567665/problem/C",categoryIndex:0,idx:2},{problemName:"Bonuses on a Line",problemId:"D",problemLetter:"D",problemUrl:"https://codeforces.com/gym/567665/problem/D",categoryIndex:0,idx:3},{problemName:"Final Boss",problemId:"E",problemLetter:"E",problemUrl:"https://codeforces.com/gym/567665/problem/E",categoryIndex:0,idx:4},{problemName:"Jumping Through Segments",problemId:"F",problemLetter:"F",problemUrl:"https://codeforces.com/gym/567665/problem/F",categoryIndex:0,idx:5},{problemName:"Queries about less than or equal elements",problemId:"G",problemLetter:"G",problemUrl:"https://codeforces.com/gym/567665/problem/G",categoryIndex:0,idx:6}],[{problemName:"Two Buttons",problemId:"A",problemLetter:"A",problemUrl:"https://codeforces.com/gym/567946/problem/A",categoryIndex:1,idx:0},{problemName:"Counting Rooms",problemId:"B",problemLetter:"B",problemUrl:"https://codeforces.com/gym/567946/problem/B",categoryIndex:1,idx:1},{problemName:"Labyrinth",problemId:"C",problemLetter:"C",problemUrl:"https://codeforces.com/gym/567946/problem/C",categoryIndex:1,idx:2},{problemName:"Dijkstra?",problemId:"D",problemLetter:"D",problemUrl:"https://codeforces.com/gym/567946/problem/D",categoryIndex:1,idx:3},{problemName:"Even Walk",problemId:"E",problemLetter:"E",problemUrl:"https://codeforces.com/gym/567946/problem/E",categoryIndex:1,idx:4},{problemName:"Pizzas",problemId:"F",problemLetter:"F",problemUrl:"https://codeforces.com/gym/567946/problem/F",categoryIndex:1,idx:5},{problemName:"Treasures",problemId:"G",problemLetter:"G",problemUrl:"https://codeforces.com/gym/567946/problem/G",categoryIndex:1,idx:5}],[{problemName:"CutRibbon",problemId:"A",problemLetter:"A",problemUrl:"https://codeforces.com/gym/567947/problem/A",categoryIndex:2,idx:0},{problemName:"Dice Combinations",problemId:"B",problemLetter:"B",problemUrl:"https://codeforces.com/gym/567947/problem/B",categoryIndex:2,idx:1},{problemName:"Investigating Zeroes and Ones",problemId:"C",problemLetter:"C",problemUrl:"https://codeforces.com/gym/567947/problem/C",categoryIndex:2,idx:2},{problemName:"2^sort",problemId:"D",problemLetter:"D",problemUrl:"https://codeforces.com/gym/567947/problem/D",categoryIndex:2,idx:3},{problemName:"Woodcutters",problemId:"E",problemLetter:"E",problemUrl:"https://codeforces.com/gym/567947/problem/E",categoryIndex:2,idx:4},{problemName:"Flowers",problemId:"F",problemLetter:"F",problemUrl:"https://codeforces.com/gym/567947/problem/F",categoryIndex:2,idx:5},{problemName:"Working out",problemId:"G",problemLetter:"G",problemUrl:"https://codeforces.com/gym/567947/problem/G",categoryIndex:2,idx:6}],[{problemName:"Static Range Sum Queries",problemId:"A",problemLetter:"A",problemUrl:"https://codeforces.com/gym/568427/problem/A",categoryIndex:3,idx:0}]],contest_ids={567665:0,567946:1,567947:2,568427:3},contests_ids=["567665","567946","567947","568427"];let users=[{nickname:"dariasc",codeforcesId:"dariasc",codeforcesRating:1689,atcoderRating:1336},{nickname:"vivivi",codeforcesId:"vivivi",codeforcesRating:1612,atcoderRating:0},{nickname:"m1tu",codeforcesId:"m1tu",codeforcesRating:1486,atcoderRating:399},{nickname:"MapacheTactico",codeforcesId:"MapacheTactico",codeforcesRating:1212,atcoderRating:347},{nickname:"ElNChou",codeforcesId:"ElNChou",codeforcesRating:1349,atcoderRating:562},{nickname:"ilopez15",codeforcesId:"ilopez15",codeforcesRating:1254,atcoderRating:207},{nickname:"ant_metayer",codeforcesId:"ant_metayer",codeforcesRating:643,atcoderRating:0},{nickname:"AlePatata92",codeforcesId:"AlePatata92",codeforcesRating:902,atcoderRating:35},{nickname:"lu_0",codeforcesId:"lu_0",codeforcesRating:728,atcoderRating:0},{nickname:"patrici4",codeforcesId:"patrici4",codeforcesRating:0,atcoderRating:0},{nickname:"curauma03",codeforcesId:"curauma03",codeforcesRating:1046,atcoderRating:0},{nickname:"elJunaeb",codeforcesId:"elJunaeb",codeforcesRating:875,atcoderRating:0},{nickname:"Pansho721",codeforcesId:"daridius",codeforcesRating:912,atcoderRating:0},{nickname:"ThisIsThisAndThatIsThat",codeforcesId:"ThisIsThisAndThatIsThat",codeforcesRating:1015,atcoderRating:44},{nickname:"pauwu",codeforcesId:"pauwu",codeforcesRating:379,atcoderRating:0}];async function generateApiSig(e,t,n,s){const o=Math.random().toString(36).substring(2,8),i=Math.floor(Date.now()/1e3),a=Object.keys(t).sort().map(e=>`${e}=${t[e]}`).join("&"),r=`${o}/${e}?apiKey=${n}&${a}&time=${i}#${s}`,c=await crypto.subtle.digest("SHA-512",(new TextEncoder).encode(r)),l=Array.from(new Uint8Array(c)),d=l.map(e=>e.toString(16).padStart(2,"0")).join("");return{apiSig:`${o}${d}`,time:i}}async function fetchContestStatus(e,t,n,s,o,i){const c="contest.status",l={contestId:e,from:t,count:n,asManager:s},{apiSig:d,time:u}=await generateApiSig(c,l,o,i),h=`https://codeforces.com/api/${c}?apiKey=${o}&asManager=${s}&contestId=${e}&count=${n}&from=${t}&time=${u}&apiSig=${d}`,a=await fetch(h);if(!a.ok)return console.error("Error fetching contest status:",a.statusText),[];const r=await a.json();return r.status!=="OK"?(console.error("API returned an error:",r.comment),[]):r.result}async function loadData(e){for(let t=0;t<trainingProblems.length;t++){const o=document.getElementById(`tab-content-${t}`);if(!o){console.error(`Tab content ${t} not found.`);return}const s=o.querySelector("table");if(!s){console.error(`Table not found in tab ${t}.`);return}correct_order_users=e[0].sort((e,n)=>n.solves[t]!=e.solves[t]?n.solves[t]-e.solves[t]:n.nickname<e.nickname?1:-1);let i=s.getElementsByTagName("tr")[0].children;for(let s=0;s<correct_order_users.length;s++){i[s+1].style.fontWeight="bold";let t=correct_order_users[s].crating,n=correct_order_users[s].arating,e="";t<800&&n<200?e="rating-black":t<=1199&&n<=399?e="rating-gray":t<=1399&&n<=799?e="rating-green":t<=1599&&n<=1299?e="rating-cyan":t<=1899&&n<=1699?e="rating-blue":t<=2099&&n<=1999?e="rating-purple":t<=2399&&n<=2299?e="rating-orange":t<=2999&&n<=2999&&(e="rating-red"),i[s+1].innerHTML=`<span class="${e}">${correct_order_users[s].nickname}</span>`}const a=s.insertRow(),n=a.insertCell(0);n.style.position="sticky",n.style.left="0",n.style.backgroundColor="#f8f9fa",n.textContent="Totales",n.style.fontWeight="bold";for(let e=0;e<correct_order_users.length;e++){const n=a.insertCell(e+1);n.textContent=correct_order_users[e].solves[t]}for(let n=0;n<trainingProblems[t].length;n++){const a=s.insertRow(),o=a.insertCell(0);o.style.position="sticky",o.style.left="0",o.style.backgroundColor="#f8f9fa",o.style.fontWeight="bold";const i=document.createElement("a");i.href=trainingProblems[t][n].problemUrl,i.textContent=trainingProblems[t][n].problemName,i.target="_blank",i.rel="noopener noreferrer",o.appendChild(i);for(let s=0;s<correct_order_users.length;s++){const o=a.insertCell(s+1),i=correct_order_users[s].idx;o.className=`task-score ${e[1][t][n][i]}`}}}}function setcache(){data=[[],[]],users.forEach((e,t)=>{let n={nickname:e.nickname,codeforcesId:e.codeforcesId,solves:new Array(trainingNames.length).fill(0),idx:t,crating:e.codeforcesRating,arating:e.atcoderRating};data[0].push(n)});let e=data[0].length;for(let t=0;t<trainingProblems.length;t++){let n=[];for(let s=0;s<trainingProblems[t].length;s++)n.push(new Array(e).fill("notAttempted"));data[1].push(n)}return{data,expires:0}}let testData=[[{nickname:"dariasc",codeforcesId:"dariasc",solves:[5,0,0],idx:0,crating:1660,arating:1300},{nickname:"vivivi",codeforcesId:"vivivi",solves:[7,0,0],idx:1,crating:1500,arating:100},{nickname:"m1tu",codeforcesId:"m1tu",solves:[2,0,0],idx:2,crating:1400,arating:100},{nickname:"mapachetactico",codeforcesId:"MapacheTactico",solves:[3,0,0],idx:3,crating:1200,arating:0}],[[["accepted","attempted","notAttempted","accepted"],["notAttempted","accepted","notAttempted","notAttempted"]],[],[]]];function getProblemIdxFromLetter(e){if(e.length===1)return e.charCodeAt(0)-"A".charCodeAt(0);const t=e.charCodeAt(0)-"A".charCodeAt(0)+1,n=e.charCodeAt(1)-"A".charCodeAt(0);return t*26+n-1}async function populateTables(e,t){const o=document.getElementById("gym-tab-content");if(!o){console.error("Tables container not found!");return}let n=localStorage.getItem("gymCache");n!==null&&(n=JSON.parse(n));let s=new Date;if(n===null||n.expires<s.getTime()){n===null?n=setcache():n=setcache();for(let s=0;s<contests_ids.length;s++){const i=contests_ids[s],o=await Promise.resolve(fetchContestStatus(i,1,100,!0,e,t));o&&o.forEach((e)=>{const a=e.verdict;let o=a==="OK"?"accepted":"attempted";const r=e.author.members[0].handle,s=contest_ids[e.contestId],i=getProblemIdxFromLetter(e.problem.index);for(let e=0;e<n.data[0].length;e++)if(n.data[0][e].codeforcesId===r){let t=n.data[1][s][i][n.data[0][e].idx];t===o||(n.data[1][s][i][n.data[0][e].idx]=o,n.data[0][e].solves[s]=n.data[0][e].solves[s]+1)}})}n.expires=s.getTime()+300*1e3,localStorage.setItem("gymCache",JSON.stringify(n)),loadData(n.data)}else loadData(n.data)}populateTables("e23005a4a475b6079a98c6c75f9d24408033ece7","d6c254ba481a12d0370517c93e2f4a2a5595586e")