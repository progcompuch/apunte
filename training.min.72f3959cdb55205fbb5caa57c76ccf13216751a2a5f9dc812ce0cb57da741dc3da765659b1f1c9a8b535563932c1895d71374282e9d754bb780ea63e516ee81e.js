const trainingNames=["Búsqueda Binaria / Dos Punteros","Grafos: BFS / DFS / Dijkstra / DSU","Programación Dinámica","Estructuras de Datos"],contests_ids=["567665","567946","567947","568427"];let users=[{nickname:"dariasc",codeforcesId:"dariasc",codeforcesRating:1689,atcoderRating:1336},{nickname:"vivivi",codeforcesId:"vivivi",codeforcesRating:1612,atcoderRating:0},{nickname:"m1tu",codeforcesId:"m1tu",codeforcesRating:1486,atcoderRating:399},{nickname:"MapacheTactico",codeforcesId:"MapacheTactico",codeforcesRating:1212,atcoderRating:347},{nickname:"ElNChou",codeforcesId:"ElNChou",codeforcesRating:1349,atcoderRating:562},{nickname:"ilopez15",codeforcesId:"ilopez15",codeforcesRating:1254,atcoderRating:207},{nickname:"ant_metayer",codeforcesId:"ant_metayer",codeforcesRating:643,atcoderRating:0},{nickname:"AlePatata92",codeforcesId:"AlePatata92",codeforcesRating:902,atcoderRating:35},{nickname:"lu_0",codeforcesId:"lu_0",codeforcesRating:728,atcoderRating:0},{nickname:"patrici4",codeforcesId:"patrici4",codeforcesRating:0,atcoderRating:0},{nickname:"curauma03",codeforcesId:"curauma03",codeforcesRating:1046,atcoderRating:0},{nickname:"elJunaeb",codeforcesId:"elJunaeb",codeforcesRating:875,atcoderRating:0},{nickname:"Pansho721",codeforcesId:"Pansho721",codeforcesRating:912,atcoderRating:0},{nickname:"ThisIsThisAndThatIsThat",codeforcesId:"ThisIsThisAndThatIsThat",codeforcesRating:1015,atcoderRating:44},{nickname:"pauwu",codeforcesId:"pauwu",codeforcesRating:379,atcoderRating:0}],complete_users_list=["JOliva","Marinkovic","Blaz","dariasc","vivivi","m1tu","AngrySeal","PathToMaster","MapacheTactico","ElNChou","ilopez15","ant_metayer","AlePatata92","lu_0","patrici4","svandich","Jayki","curauma03","elJunaeb","daridius","Pansho721","ThisIsThisAndThatIsThat","pauwu","Ciruela","davicom","lazyelekid","Zertex"];async function generateApiSig(e,t,n,s){const o=Math.random().toString(36).substring(2,8),i=Math.floor(Date.now()/1e3),a=Object.keys(t).sort().map(e=>`${e}=${t[e]}`).join("&"),r=`${o}/${e}?apiKey=${n}&${a}&time=${i}#${s}`,c=await crypto.subtle.digest("SHA-512",(new TextEncoder).encode(r)),l=Array.from(new Uint8Array(c)),d=l.map(e=>e.toString(16).padStart(2,"0")).join("");return{apiSig:`${o}${d}`,time:i}}async function fetchContestStatus(e,t,n,s,o,i){const c="contest.status",l={contestId:e,from:t,count:n,asManager:s},{apiSig:d,time:u}=await generateApiSig(c,l,o,i),h=`https://codeforces.com/api/${c}?apiKey=${o}&asManager=${s}&contestId=${e}&count=${n}&from=${t}&time=${u}&apiSig=${d}`,a=await fetch(h);if(!a.ok)return console.error("Error fetching contest status:",a.statusText),[];const r=await a.json();return r.status!=="OK"?(console.error("API returned an error:",r.comment),[]):r.result}async function fetchContestStandings(e,t,n){const i=!0,a=1,r=30,c=!0;participantTypes="PRACTICE";const l="contest.standings";let d=complete_users_list.join;const u={contestId:e,from:a,count:r,asManager:i,showUnofficial:c,participantTypes};d=complete_users_list.join(";");const{apiSig:h,time:m}=await generateApiSig(l,u,t,n),f=`https://codeforces.com/api/${l}?apiKey=${t}&asManager=${i}&contestId=${e}&count=${r}&from=${a}&participantTypes=${participantTypes}&showUnofficial=${c}&time=${m}&apiSig=${h}`,s=await fetch(f);if(!s.ok)return console.error("Error fetching contest standings:",s.statusText),[];const o=await s.json();return o.status!=="OK"?(console.error("API returned an error:",o.comment),[]):o.result}async function loadData(e){for(let n=0;n<trainingNames.length;n++){const d=document.getElementById(`tab-content-${n}`);if(!d){console.error(`Tab content ${n} not found.`);return}const i=d.querySelector("table");if(!i){console.error(`Table not found in tab ${n}.`);return}const u=contests_ids[n];contest_data=e[u],problem_list=contest_data[0];let a=i.getElementsByTagName("tr")[0].children,t={},c={};for(let e=0;e<users.length;e++)t[users[e].codeforcesId]={crating:users[e].codeforcesRating,arating:users[e].atcoderRating},c[users[e].codeforcesId]={crating:users[e].codeforcesRating,arating:users[e].atcoderRating};let s=0;for(let e=0;e<contest_data[1].length;e++)if(user_handle=contest_data[1][e].handle,user_handle in t){a[s+1].style.fontWeight="bold";let n=t[user_handle].crating,o=t[user_handle].arating,e="";n<800&&o<200?e="rating-black":n<=1199&&o<=399?e="rating-gray":n<=1399&&o<=799?e="rating-green":n<=1599&&o<=1299?e="rating-cyan":n<=1899&&o<=1699?e="rating-blue":n<=2099&&o<=1999?e="rating-purple":n<=2399&&o<=2299?e="rating-orange":n<=2999&&o<=2999&&(e="rating-red"),a[s+1].innerHTML=`<span class="${e}">${user_handle}</span>`,delete t[user_handle],s+=1}for(const[r,i]of Object.entries(t)){a[s+1].style.fontWeight="bold";let n=i.crating,o=i.arating,e="";n<800&&o<200?e="rating-black":n<=1199&&o<=399?e="rating-gray":n<=1399&&o<=799?e="rating-green":n<=1599&&o<=1299?e="rating-cyan":n<=1899&&o<=1699?e="rating-blue":n<=2099&&o<=1999?e="rating-purple":n<=2399&&o<=2299?e="rating-orange":n<=2999&&o<=2999&&(e="rating-red"),a[s+1].innerHTML=`<span class="${e}">${r}</span>`,s+=1}const l=i.insertRow(),o=l.insertCell(0);o.style.position="sticky",o.style.left="0",o.style.backgroundColor="#f8f9fa",o.textContent="Totales",o.style.fontWeight="bold";let r=0;for(let e=0;e<contest_data[1].length;e++)if(user_handle=contest_data[1][e].handle,user_handle in c){const n=l.insertCell(r+1);let t=0;for(let n=0;n<contest_data[1][e].solves.length;n++)contest_data[1][e].solves[n]==2&&(t+=1);n.textContent=t,r++}for(const[n,s]of Object.entries(t)){const e=l.insertCell(r+1);e.textContent=0,r+=1}for(let e=0;e<problem_list.length;e++){const a=i.insertRow(),n=a.insertCell(0);n.style.position="sticky",n.style.left="0",n.style.backgroundColor="#f8f9fa",n.style.fontWeight="bold";const s=document.createElement("a");s.href=problem_list[e].url,s.textContent=problem_list[e].name,s.target="_blank",s.rel="noopener noreferrer",n.appendChild(s);let o=0;for(let t=0;t<contest_data[1].length;t++)if(user_handle=contest_data[1][t].handle,user_handle in c){const s=a.insertCell(o+1);let n=contest_data[1][t].solves[e],i=n==2?"accepted":n==1?"attempted":"notAttempted";s.className=`task-score ${i}`,o++}for(const[n,s]of Object.entries(t)){const e=a.insertCell(o+1);e.className=`task-score notAttemped`,o+=1}}}}function setcache(){return{data:[],expires:0}}async function populateTables(e,t){const o=document.getElementById("gym-tab-content");if(!o){console.error("Tables container not found!");return}let n=localStorage.getItem("gymCache");n!==null&&(n=JSON.parse(n));let s=new Date;if(n===null||n.expires<s.getTime()){n===null?n=setcache():n=setcache(),n.data={};for(let o=0;o<contests_ids.length;o++){const i=contests_ids[o],s=await Promise.resolve(fetchContestStandings(i,e,t));s&&(console.log(s),standings_rows=s.rows,standings_problems=s.problems,data_rows=[],problem_names=[],standings_problems.forEach((e)=>{problem_names.push({name:e.name,url:"https://codeforces.com/gym/"+i+"/problem/"+e.index})}),standings_rows.forEach((e)=>{srow_handle=e.party.members[0].handle,srow_results=e.problemResults,results_data=[],srow_results.forEach((e)=>{results_data.push(e.points>0?2:e.rejectedAttemptCount>0?1:0)}),data_rows.push({handle:srow_handle,solves:results_data})}),n.data[i]=[problem_names,data_rows])}n.expires=s.getTime()+300*1e3,localStorage.setItem("gymCache",JSON.stringify(n)),loadData(n.data)}else loadData(n.data)}populateTables("e23005a4a475b6079a98c6c75f9d24408033ece7","d6c254ba481a12d0370517c93e2f4a2a5595586e")